USE letter;

DELIMITER $$

-- sdfsdfsdfsg

DROP PROCEDURE IF EXISTS ROUTINE_DOWNLOAD_1$$

CREATE DEFINER = 'root'@'localhost'
PROCEDURE ROUTINE_DOWNLOAD_1(IN GRTYPE varchar(32),
IN GRNAME varchar(32),
IN GPATH varchar(500),
IN GUSER varchar(15),
OUT GSTATUS int,
OUT GSTATUSMESSAGE varchar(100))
PROC_LABEL:
BEGIN

    DECLARE DBNAME varchar(100) ;
    DECLARE ODATE datetime;
    DECLARE TEMPCOUNT int(2);
    DECLARE CASEVAL varchar(1);

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN

        SET GSTATUS = 9;
        SET GSTATUSMESSAGE = "ERROR";
        COMMIT;

    END;

  INSERT INTO dba_routines_download_log(RTYPE, RNAME, USERID, DTIME) VALUES(GRTYPE, GRNAME, GUSER, NOW());


  SET DBNAME =  'LETTER';

  IF GRTYPE = 'PROCEDURE' THEN
    
    SELECT COUNT(1)
      INTO TEMPCOUNT
      FROM information_schema.PARAMETERS
      WHERE SPECIFIC_SCHEMA = DBNAME
      AND SPECIFIC_NAME = GRNAME;
  
    IF TEMPCOUNT > 0 THEN
      
    SET @Q1 := 'SELECT CONCAT("CREATE PROCEDURE ",p.SPECIFIC_NAME,"(",GROUP_CONCAT(p.PARAMETER_MODE," ",p.PARAMETER_NAME," ",p.DATA_TYPE,';
    SET @Q1 = CONCAT(@Q1,'CASE p.DATA_TYPE WHEN "varchar" THEN CONCAT("(",p.CHARACTER_MAXIMUM_LENGTH,")") WHEN "decimal" THEN CONCAT("(",p.NUMERIC_PRECISION,",",p.NUMERIC_SCALE,")") ');
    SET @Q1 = CONCAT(@Q1,'ELSE "" END SEPARATOR ",
"),")", CHAR(13),CHAR(10),r.ROUTINE_DEFINITION) INTO OUTFILE "', GPATH );
    SET @Q1 = CONCAT(@Q1,'" FIELDS ESCAPED BY "" LINES TERMINATED BY "\n" FROM information_schema.ROUTINES r,information_schema.PARAMETERS p ');
    SET @Q1 = CONCAT(@Q1,'  WHERE r.ROUTINE_SCHEMA = "',DBNAME,'" AND r.ROUTINE_TYPE = "',GRTYPE,'" AND r.SPECIFIC_NAME = "',GRNAME,'" AND r.SPECIFIC_NAME = p.SPECIFIC_NAME ');
    SET @Q1 = CONCAT(@Q1,'   AND r.ROUTINE_SCHEMA = p.SPECIFIC_SCHEMA');
  
   ELSE
      
    SET @Q1 := 'SELECT CONCAT("CREATE PROCEDURE ",R.SPECIFIC_NAME,"()", CHAR(13),CHAR(10),r.ROUTINE_DEFINITION)';
    SET @Q1 = CONCAT(@Q1,' INTO OUTFILE "',GPATH,'" FIELDS ESCAPED BY "" LINES TERMINATED BY "
" FROM information_schema.ROUTINES r'); 
    SET @Q1 = CONCAT(@Q1,' WHERE r.ROUTINE_SCHEMA = "',DBNAME,'" AND r.ROUTINE_TYPE = "',GRTYPE,'" AND r.SPECIFIC_NAME = "',GRNAME,'"'); 
    
   END IF;

  ELSE

    SET @Q1 := 'SELECT CONCAT("CREATE FUNCTION ",p.SPECIFIC_NAME,"(",GROUP_CONCAT(p.PARAMETER_NAME," ",p.DATA_TYPE, ';
    SET @Q1 = CONCAT(@Q1,' CASE p.DATA_TYPE WHEN "varchar" THEN CONCAT("(",p.CHARACTER_MAXIMUM_LENGTH,")") ');
    SET @Q1 = CONCAT(@Q1,' WHEN "decimal" THEN CONCAT("(",p.NUMERIC_PRECISION,",",p.NUMERIC_SCALE,")") ELSE "" END SEPARATOR ","),")",');
    SET @Q1 = CONCAT(@Q1,' CHAR(13),CHAR(10),"RETURNS ",CASE p.ORDINAL_POSITION WHEN 0 THEN  CASE p.DATA_TYPE ');
    SET @Q1 = CONCAT(@Q1,' WHEN "varchar" THEN CONCAT(p.DATA_TYPE,"(",p.CHARACTER_MAXIMUM_LENGTH,")") ');
    SET @Q1 = CONCAT(@Q1,' WHEN "decimal" THEN CONCAT(p.DATA_TYPE,"(",p.NUMERIC_PRECISION,",",p.NUMERIC_SCALE,")") ELSE p.DATA_TYPE END END,');
    SET @Q1 = CONCAT(@Q1,' CHAR(13),CHAR(10),r.ROUTINE_DEFINITION) INTO OUTFILE "',GPATH);
    SET @Q1 = CONCAT(@Q1,'" FIELDS ESCAPED BY "" LINES TERMINATED BY "
" FROM information_schema.ROUTINES r,information_schema.PARAMETERS p ');
    SET @Q1 = CONCAT(@Q1,' WHERE r.ROUTINE_SCHEMA = "',DBNAME,'" AND r.ROUTINE_TYPE = "FUNCTION" AND r.SPECIFIC_NAME = "',GRNAME);
    SET @Q1 = CONCAT(@Q1,'" AND r.SPECIFIC_NAME = p.SPECIFIC_NAME AND r.ROUTINE_SCHEMA = p.SPECIFIC_SCHEMA ');

  END IF;

  PREPARE S1 FROM @Q1;
    EXECUTE S1;
    DEALLOCATE PREPARE S1;

  SET GSTATUS = 1;
  SET GSTATUSMESSAGE = "SUCCESS";
    
END
$$

DELIMITER ;

DELIMITER $$


DROP PROCEDURE IF EXISTS ROUTINE_UPLOAD_1$$

CREATE DEFINER = 'root'@'localhost'
PROCEDURE ROUTINE_UPLOAD_1(
IN GRNAME varchar(32),
IN GUSER varchar(15),
OUT GSTATUS int,
OUT GSTATUSMESSAGE varchar(100),
OUT GRPATH varchar(500),
OUT GRID varchar(15))
PROC_LABEL:
BEGIN

    DECLARE DBNAME varchar(100) ;
    DECLARE ODATE datetime;
    DECLARE TEMPCOUNT int(2);
    DECLARE CASEVAL varchar(1);

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN

        SET GSTATUS = 9;
        SET GSTATUSMESSAGE = "ERROR";
        COMMIT;

    END;
  SET GRID = NEXTVAL("RU_ID");

  INSERT INTO dba_routines_upload_log(RID, RNAME, USERID, UTIME) VALUES(GRID, GRNAME, GUSER, NOW());  

  SET GRPATH =  CONCAT(GET_GLOBAL_PARAM("ROUTINE_PATH"),GRID,'/');
  SET GSTATUS = 1;
  SET GSTATUSMESSAGE = "SUCCESS";
    
END
$$

DELIMITER ;